/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* basic browser reset using the universal selector: */
*,
*::before,
*::after  {
   margin: 0;
   padding: 0;
   box-sizing: inherit; /*inherits from body{}*/
}

/* 
PROJECT SETTINGS:
default browser font is 16px
we want to set it to 10px to easy calculate REMs
percentage is best for accessibility (ie. when zooming in)
so 10/16 = 0.625  (10px = 1rem) 
*/
html {
   font-size: 62.5%;
}

body {
   font-family: "Lato", sans-serif;
   font-weight: 400;
   /* font-size: 16px; */
   line-height: 1.7;
   color: #777;
   padding: 3rem;

   box-sizing: border-box; /* makes borders, paddings NOT add to total width, height */
}

.header {
   height: 95vh;
   background-image: linear-gradient(
      to right bottom, 
      rgba(126, 213, 111, 0.8), 
      hsla(160, 64%, 43%, 0.8)), 
      url(../img/hero.jpg);
   background-size: cover;
   background-position: top;
   position: relative;
   clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%)
}

.header__logo-box {
   position: absolute;
   top: 4rem;
   left: 4rem;
}

.header__logo {
   height: 3.5rem;
}

.header__text-box {
   position: absolute;
   top: 40%;
   left: 50%;
   transform: translate(-50%, -50%);
   text-align: center;
}

.heading-primary {
   color: #fff;
   text-transform: uppercase;
   margin-bottom: 6rem;

   backface-visibility: hidden;  /* hides the back part of an element during animation */
}

.heading-primary--main {
   display: block;
   font-size: 6rem;
   font-weight: 400;
   letter-spacing: 3.5rem;
   animation-name: moveInLeft;
   animation-duration: 1s;
   animation-timing-function: ease-out;

   /* 
   animation-iteration-count: 3; -- how many times the animation will repeat
   animation-delay: 3s; 
   */
}

.heading-primary--sub {
   display: block;
   font-size: 2rem;
   font-weight: 700;
   letter-spacing: 1.75rem;
   animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
   0% {
      opacity: 0;
      transform: translateX(-10rem);
   }

   80% {
      opacity: 0.8;
      transform: translateX(1rem);
   }
   
   100% {
      opacity: 1;
      transform: translateX(0);
   }
}

@keyframes moveInRight {
   0% {
      opacity: 0;
      transform: translateX(10rem);
   }

   80% {
      opacity: 0.8;
      transform: translateX(-1rem);
   }
   
   100% {
      opacity: 1;
      transform: translateX(0);
   }
}

@keyframes moveInBottom {
   0% {
      opacity: 0;
      transform: translateY(5rem);
   }

   100% {
      opacity: 1;
      transform: translateY(0);
   }
}

/* 
':link' is a pseudoclass
pseudoclasses are states of an element 
*/
.btn:link,
.btn:visited {
   text-transform: uppercase;
   text-decoration: none;
   padding: 1.5rem 4rem;
   display: inline-block;
   border-radius: 10rem;
   transition: all .2s; /* 'all' will apply to all effects (hover, active etc)*/
   position: relative;
   font-size: 1.6rem;
}

.btn:hover {
   transform: translateY(-.3rem);
   box-shadow: 0 1rem 2rem rgba(0, 0, 0, .2); /*values are for X Y BLUR then color & opacity*/
}

.btn:active {
   transform: translateY(-.1rem);
   box-shadow: 0 .5rem 1rem rgba(0, 0, 0, .2);
}

.btn--white {
   background-color: #fff;
   color: #777;
}

.btn::after {
   content: ""; /*'content' and 'display' properties are required for '::after' pseudoclass to work*/
   display: inline-block;
   height: 100%;  
   width: 100%;
   border-radius: 10rem;
   position: absolute;
   top: 0;
   left: 0;
   z-index: -1;
   transition: all .4s;
}

.btn-- white::after {
   background-color: #fff;
}

.btn:hover::after {
   transform: scaleX(1.4) scaleY(1.6);
   opacity: 0;
}

.btn--animated {
   animation: moveInBottom .5s ease-out .75s;
   animation-fill-mode: backwards; /*applies animation styles from 0% before the animation starts so btn is not visible on page load*/
}
