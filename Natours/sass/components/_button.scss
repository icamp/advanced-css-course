/* 
':link' is a pseudoclass
pseudoclasses are states of an element 
*/
.btn {
   &,
   &:link,
   &:visited {
      text-transform: uppercase;
      text-decoration: none;
      padding: 1.5rem 4rem;
      display: inline-block;
      border-radius: 10rem;
      transition: all .2s; /* 'all' will apply to all effects (hover, active etc)*/
      position: relative;
      font-size: $default-font-size;

      // Change for the <button> element (others used are <a> elements)
      border: none;
      cursor: pointer;
   }

   &:hover {
      transform: translateY(-.3rem);
      box-shadow: 0 1rem 2rem rgba($color-black, .2); /*values are for X Y BLUR then color & opacity*/

      &::after {
         transform: scaleX(1.4) scaleY(1.6);
         opacity: 0;
      }
   }

   &:active,
   &:focus {
      outline: none;
      transform: translateY(-.1rem);
      box-shadow: 0 .5rem 1rem rgba($color-black, .2);
   }

   &--white {
      background-color: $color-white;
      color: $color-grey-dark;

      &::after {  // a.k.a:    .btn--white::after  
         background-color: $color-white;
      }
   }

   &--green {
      background-color: $color-primary;
      color: $color-white;

      &::after {
         background-color: $color-primary;
      }
   }

   &::after {
      content: ""; /*'content' and 'display' properties are required for '::after' pseudoclass to work*/
      display: inline-block;
      height: 100%;  
      width: 100%;
      border-radius: 10rem;
      position: absolute;
      top: 0;
      left: 0;
      z-index: -1;
      transition: all .4s;
   }

   &--animated {
      animation: moveInBottom .5s ease-out .75s;
      animation-fill-mode: backwards; /*applies animation styles from 0% before the animation starts so btn is not visible on page load*/
   }
}

.btn-text {
   &:link,
   &:visited {
      font-size: $default-font-size;
      color: $color-primary;
      display: inline-block;
      text-decoration: none;
      border-bottom: 1px solid $color-primary;
      padding: 3px;
      transition: all .2s;
   }

   &:hover {
      background-color: $color-primary;
      color: $color-white;
      box-shadow: 0 1rem 2rem rbga($color-black, .15);
      transform: translateY(-2px);
   }

   &:active {
      box-shadow: 0 .5rem 1rem rbga($color-black, .15);
      transform: translateY(0);
   }
}